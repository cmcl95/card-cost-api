plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.cmcabrera'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // Bridge between Lombok and MapStruct
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // H2 Database
    runtimeOnly 'com.h2database:h2'

    // PostgreSQL Driver
    implementation 'org.postgresql:postgresql'

    // Logging (Log4j)
    implementation platform('org.apache.logging.log4j:log4j-bom:2.24.0')
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    modules {
        module('org.springframework.boot:spring-boot-starter-logging') {
            replacedBy('org.springframework.boot:spring-boot-starter-log4j2', 'Use Log4j2 instead of Logback')
        }
    }
    // Log4j JSON-encoding support
    runtimeOnly 'org.apache.logging.log4j:log4j-layout-template-json'

    // Caffeine for caching
    implementation 'com.github.ben-manes.caffeine:caffeine'

    // Swagger UI
    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9')

    // Wiremock
    testImplementation 'com.github.tomakehurst:wiremock-standalone:3.0.1'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    // Bucket4j
    implementation('com.bucket4j:bucket4j-core:8.10.1')
}

tasks.named('test') {
    useJUnitPlatform()
}
