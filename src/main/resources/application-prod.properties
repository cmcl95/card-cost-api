
# Dynamic port
server.port=${PORT:8080}
server.address=0.0.0.0

# Data source
spring.datasource.url=jdbc:postgresql://${PROD_DB_HOST}:${PROD_DB_PORT}/${PROD_DB_NAME}
spring.datasource.username=${PROD_DB_USERNAME}
spring.datasource.password=${PROD_DB_PASSWORD}
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# Database connection pool settings
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-test-query=SELECT 1

# Redis cache
spring.data.redis.host=${PROD_REDIS_HOST}
spring.data.redis.port=${PROD_REDIS_PORT}
spring.data.redis.password=${PROD_REDIS_PASSWORD}
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-wait=-1ms

# Ensure Actuator health details are shown for Docker profile too
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.health.redis.enabled=true
management.health.db.enabled=true

# Startup optimization
spring.jpa.open-in-view=false

# Initialize data (temporary, not ideal for production)
spring.sql.init.mode=always

# Logging
logging.level.root=DEBUG
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.zaxxer.hikari=DEBUG
logging.level.org.springframework.data.redis=DEBUG